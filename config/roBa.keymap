#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt Q LEFT_ALT      &kp W  &kp E  &kp R        &kp T                                                            &kp Y        &kp U  &kp I      &kp O         &mt P RIGHT_CONTROL
&mt A LEFT_CONTROL  &kp S  &kp D  &kp F        &kp G             &mkp MB1                    &kp ESCAPE         &kp H        &kp J  &kp K      &kp L         &mt MINUS RIGHT_ALT
&mt LEFT_SHIFT Z    &kp X  &kp C  &kp V        &kp B             &kp LEFT_BRACKET            &kp RIGHT_BRACKET  &kp N        &kp M  &kp COMMA  &lt 4 PERIOD  &mt SLASH RIGHT_SHIFT
&none               &none  &none  &lt 2 SPACE  &mt LEFT_ALT TAB  &mt LEFT_WIN BACKSPACE      &mt TAB RIGHT_WIN  &lt 1 ENTER                                  &none
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        ARROW {
            bindings = <
&mt LEFT_ALT NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4   &kp N5                                   &kp NUMBER_6    &kp N7          &kp N8         &kp NUMBER_9        &mt NUMBER_0 RIGHT_CONTROL
&kp LEFT_CONTROL       &none         &kp DELETE    &kp BACKSPACE  &trans  &trans                   &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT_ARROW     &mt EQUAL RIGHT_ALT
&kp LEFT_SHIFT         &none         &none         &none          &none   &none                    &none   &none           &none           &kp SEMICOLON  &lt 4 SINGLE_QUOTE  &mt RIGHT_SHIFT BACKSLASH
&trans                 &trans        &trans        &trans         &trans  &mt LEFT_WIN DELETE      &trans  &trans                                                             &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        FUNCTION {
            bindings = <
&mt LEFT_ALT LS(F1)      &kp F2   &kp F3   &kp F4  &kp F5                                      &mkp MB4    &kp PAGE_UP  &kp PAGE_DOWN  &kp HOME  &mt RIGHT_CONTROL END
&mt LEFT_CONTROL LC(F6)  &kp F7   &kp F8   &kp F9  &kp F10  &trans      &trans                 &kp ESCAPE  &mkp MB1     &mkp MB3       &mkp MB2  &kp RIGHT_ALT
&kp LEFT_SHIFT           &kp F11  &kp F12  &none   &none    &trans      &none                  &mkp MB5    &tog 2       &to 4          &mo 4     &kp RIGHT_SHIFT
&trans                   &trans   &trans   &trans  &trans   &trans      &mt RIGHT_CONTROL TAB  &trans                                            &trans
            >;
        };

        MEDIA {
            bindings = <
&kp LEFT_ALT      &none           &none             &none       &none                       &trans             &trans          &trans           &trans           &kp RIGHT_CONTROL
&kp LEFT_CONTROL  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &none   &trans      &trans  &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW     &kp RIGHT_ARROW  &kp RIGHT_ALT
&kp LEFT_SHIFT    &none           &none             &none       &none   &none       &none   &kp C_VOLUME_DOWN  &kp K_MUTE      &kp C_VOLUME_UP  &trans           &kp RIGHT_SHIFT
&trans            &trans          &trans            &trans      &trans  &trans      &trans  &trans                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
